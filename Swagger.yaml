swagger: "2.0"
info:
  description: "This is a sample API for a store"
  version: "1.0.0"
  title: "Store API"
  contact:
    email: "support@store.com"
basePath: "/api"
schemes:
  - "http"
consumes:
  - "application/json"
produces:
  - "application/json"
paths:
  /products:
    get:
      summary: "Get all products"
      description: "Returns a list of all products"
      responses:
        200:
          description: "A list of products"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Product"
        404:
          description: "Product Not Found"
    post:
      summary: "Add a new product"
      description: "Adds a new product to the store"
      parameters:
        - in: "body"
          name: "product"
          description: "The product to add"
          required: true
          schema:
            $ref: "#/definitions/Product"
      responses:
        201:
          description: "The newly added product"
          schema:
            $ref: "#/definitions/Product"
        500:
          description: "Internal Server Error"
  /product/{PID}:
    get:
      summary: "Get a product by ID"
      description: "Returns a product with the specified ID"
      parameters:
        - in: "path"
          name: "PID"
          description: "The ID of the product to retrieve"
          required: true
          type: "string"
      responses:
        200:
          description: "The requested product"
          schema:
            $ref: "#/definitions/Product"
        404:
          description: "Product with specified ID not found"
  /addProduct:
    post:
      summary: "Add a new product"
      description: "Adds a new product to the store"
      parameters:
        - in: "body"
          name: "product"
          description: "The product to add"
          required: true
          schema:
            $ref: "#/definitions/Product"
      responses:
        201:
          description: "The newly added product"
          schema:
            $ref: "#/definitions/Product"
        500:
          description: "Internal Server Error"
  /deleteProduct/{PID}:
    delete:
      summary: "Delete a product by ID"
      description: "Deletes a product with the specified ID"
      parameters:
        - in: "path"
          name: "PID"
          description: "The ID of the product to delete"
          required: true
          type: "string"
      responses:
        200:
          description: "Product successfully deleted"
        500:
          description: "Internal Server Error"
  /getCustomers:
    get:
      summary: "Get all customers"
      description: "Returns a list of all customers"
      responses:
        200:
          description: "A list of customers"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Customer"
        404:
          description: "Customers not found"
  /addCustomer:
    post:
      summary: "Add a new customer"
      description: "Adds a new customer to the store"
      parameters:
        - in: "body"
          name: "customer"
          description: "The customer to add"
          required: true
          schema:
            $ref: "#/definitions/Customer"
      responses:
        201:
          description: "The newly added customer"
